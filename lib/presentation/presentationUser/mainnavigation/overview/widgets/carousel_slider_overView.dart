import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:shiftapp/presentation/shared/components/base_stateless_widget.dart';import '../../../../../domain/entities/job_offers/job_offer_dto.dart';import '../../../joboffers/widgets/job_offer_item_widget.dart';import '../../../resources/colors.dart';import '../../../resources/constants.dart';class CarouselSliderSection extends BaseStatelessWidget {  Stream<List<JobOfferDto>?> stream;  final Function(int) onCheckCertificateJob;  final Function(List<JobOfferDto> offers) onTapViewAll;  CarouselSliderSection({    required this.stream,    required this.onTapViewAll,    required this.onCheckCertificateJob,  });  @override  Widget build(BuildContext context) {    return buildAllOffersSlider(      data: stream,    );  }  final cardDecoration = BoxDecoration(    color: Colors.white,    boxShadow:  const [      BoxShadow(        color: kGrey_D6,        spreadRadius: 2,        blurRadius: 2,        offset: Offset(2, 2), // c      )    ],    borderRadius: BorderRadius.circular(10),  );  Widget buildAllOffersSlider({required Stream<List<JobOfferDto>?> data}) {    return StreamBuilder<List<JobOfferDto>?>(        stream: data,        builder: (context, snapshot) {          return snapshot.hasData              ? Column(                  children: [                    title(snapshot.data ?? []),                    CarouselSlider(                      options: options(),                      items: snapshot.data!                          .map(                            (item) => JobOfferItemWidget(                                item,                              isSpecialSlider: true,                              onClickApply: (){                                print('checkCertificateJob');                                onCheckCertificateJob(item.id ?? 0);                              },                            ),                          )                          .toList(),                    ),                  ],                )              : Container();        });  }  CarouselOptions options() {    return CarouselOptions(        aspectRatio: 16 / 16,        viewportFraction: 0.77,        initialPage: 0,        enableInfiniteScroll: true,        pauseAutoPlayInFiniteScroll: true,        pauseAutoPlayOnManualNavigate: true,        pauseAutoPlayOnTouch: true,        animateToClosest: true,        disableCenter: true,        reverse: true,        autoPlay: false,        autoPlayInterval: const Duration(seconds: 1),        autoPlayAnimationDuration: const Duration(milliseconds: 200),        autoPlayCurve: Curves.fastOutSlowIn,        enlargeCenterPage: true,        enlargeFactor: .35,        scrollDirection: Axis.horizontal,        padEnds: true,        height: 349,        pageSnapping: true,        scrollPhysics:            const ScrollPhysics(parent: AlwaysScrollableScrollPhysics()));  }  Widget title(offers) {    return Row(      children: [        Text(          strings.special_jobs,          style: kTextMedium.copyWith(color: kBlackGrey),        ),        const Spacer(),        viewAll(offers),      ],    );  }  Widget viewAll(offers) {    return TextButton(      onPressed: () async {        onTapViewAll(offers);      },      child: Text(        strings.view_all,        style: kTextRegular.copyWith(color: kBrownishGrey, fontSize: 12),      ),    );  }}