import 'package:flutter/material.dart';import 'package:shiftapp/data/models/loans_request/index.dart';import '../../../../shared/components/text_field/build_text_field_item.dart';import '../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/components/buttons/row_buttons.dart';import '../../../common/common_state.dart';import 'package:shiftapp/domain/entities/loans_request/index.dart';import '../widgets/loan_request_conditions.dart';import '../widgets/loan_request_type_picker.dart';import '../widgets/installment_months_number_picker.dart';import '../widgets/sponsor_data.dart';import '../widgets/warning_check_box_widget.dart';class AddLoanRequestScreen extends BaseStatelessWidget {  final List<LoanType> loanTypes;  final Function(int) onFetchLoanNumMonthCondition;  final StreamStateInitial<LoanNumMonthCondition?> loanNumMonthConditionStream;  final Function(AddLoanRequestParams) addNewLoanRequest;  final Function(String) fetchIdNumber;  final StreamStateInitial<NameByIdNumber?> idNumberStream;  AddLoanRequestScreen({    Key? key,    required this.onFetchLoanNumMonthCondition,    required this.loanTypes,    required this.loanNumMonthConditionStream,    required this.addNewLoanRequest,    required this.fetchIdNumber,    required this.idNumberStream,  }) : super(key: key);  var amountController = TextEditingController();  StreamState<String> descriptionStream = StreamStateInitial();  StreamState<bool> isGuarantorStream = StreamStateInitial();  StreamState<bool> isAgreeStream = StreamStateInitial();  final _formKey = GlobalKey<FormState>();  int loanTypeId = 0;  String loanTypeCrmValue = '';  int loansAmount = 0;  int monthId = 0;  String idNumber = '';  @override  Widget build(BuildContext context) {    return Scaffold(      bottomNavigationBar: rowButtonsActions(context),      body: Form(          key: _formKey,          child: SingleChildScrollView(            padding: const EdgeInsets.all(16),            child: Column(              children: [                LoanRequestTypePicker(                  loanTypes: loanTypes,                  onSelectItem: (value, crmValue) {                    onFetchLoanNumMonthCondition(value.index);                    loanTypeId = value.index;                    loanTypeCrmValue = crmValue;                    descriptionStream.setData(value.description ?? '');                    monthId = 0;                  },                ),                InstallmentMonthsNumberPicker(                  loanNumMonthConditionStream: loanNumMonthConditionStream,                  onSelectItem: (value) {                    monthId = value?.id ?? 0;                    print('monthId: ${value?.isGuarantor}');                    isGuarantorStream.setData(value?.isGuarantor ?? false);                  },                ),                BuildTextFieldItem(                  title: strings.loan_amount,                  hintText: strings.enter_loan_amount,                  controller: amountController,                ),                StreamBuilder<bool>(                  stream: isGuarantorStream.stream,                  builder: (context, snapshot) {                    print('snapshot.data: ${snapshot.data}');                    return (!snapshot.hasData || snapshot.data == false) ? const SizedBox() :                      SponsorData(                      fetchIdNumber: (value) {                        idNumber = value;                        fetchIdNumber(value);                      },                      nameByIdNumberStream: idNumberStream,                    );                  }                ),                LoanRequestConditions(                  loanNumMonthConditionStream: loanNumMonthConditionStream,                ),                WarningCheckBoxWidget(                  descriptionStream: descriptionStream,                  onChanged: (value) {                    isAgreeStream.setData(value ?? false);                  },                ),                const SizedBox(                  height: 14,                ),              ],            ),          )),    );  }  rowButtonsActions(BuildContext context) {    return StreamBuilder<bool>(      stream: isAgreeStream.stream,      builder: (context, snapshot) {        return RowButtons(          onSave: (!snapshot.hasData || snapshot.data == false) ? null :              () {            if (_formKey.currentState!.validate()) {              addNewLoanRequest(AddLoanRequestParams(                loanType: loanTypeId,                crmValue: loanTypeCrmValue.toString(),                loansAmount: int.parse(amountController.text),                monthNumber: monthId,                idNumber: idNumber,              ));            }          },          onCancel: () {            Navigator.pop(context);          },        );      }    );  }}