import 'package:google_maps_flutter/google_maps_flutter.dart';import 'package:shiftapp/presentation/presentationUser/common/common_state.dart';import 'package:shiftapp/presentation/shared/components/base_widget_bloc.dart';import 'package:shiftapp/utils/app_utils.dart';import '../../../../../../../utils/app_icons.dart';import '../../../../../../shared/components/dialogs_manager.dart';import '../../../../../common/stream_data_state.dart';import '../../../../data/models/index.dart';import '../../../../domain/entities/current_round_trip.dart';import '../../../../domain/entities/gas_station_trip.dart';import '../../../startTour/pages/start_tour_screen.dart';import '../cubit/gas_stations_plane_cubit.dart';import 'gas_stations_plane_screen.dart';class GasStationsPlanePage extends BaseBlocWidget<    Initialized<List<GasStationTrip>>, GasStationsPlaneCubit> {  final CurrentRoundTrip currentRoundTrip;  final Function() onRefresh;  GasStationsPlanePage(      {super.key, required this.currentRoundTrip, required this.onRefresh});  @override  void loadInitialData(BuildContext context) {    bloc.fetchInitialData(currentRoundTrip.id ?? 0);  }  LatLng? latLng;  @override  Widget buildWidget(      BuildContext context, Initialized<List<GasStationTrip>> state) {    return GasStationsPlaneScreen(        currentRoundTrip: currentRoundTrip,        onAddRoundTripFillStation: (params, LatLng newLatLng) {          latLng = newLatLng;          return bloc.addRoundTripFillStation(params);        },        state: state.data);  }  @override  void onSuccessDismissed() {    onRefresh();    Navigator.pop(context);    DialogsManager.baseDialog(      context,      message: strings.do_you_navigation_map,      hideCancelButton: false,      onClickOk: () async {        await AppUtils.openMap(          latLng?.latitude ?? 0,          latLng?.longitude ?? 0,        );        Navigator.pop(context);      },      icon: AppIcons.info_reset_mobile,    );  }}