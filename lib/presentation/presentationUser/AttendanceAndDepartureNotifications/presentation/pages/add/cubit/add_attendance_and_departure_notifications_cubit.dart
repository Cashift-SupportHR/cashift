import 'package:injectable/injectable.dart';import 'package:shiftapp/core/bloc/base_cubit.dart';import '../../../../../common/common_state.dart';import '../../../../data/models/add_attendance_notifications_prams.dart';import '../../../../data/repositories/attendance_and_departure_notifications_repository.dart';import '../../../../domain/entities/AttendanceNotifiType.dart';@Injectable()class AddAttendanceAndDepartureNotificationsCubit extends BaseCubit {  final AttendanceAndDepartureNotificationsRepository _repository;  AddAttendanceAndDepartureNotificationsCubit(    this._repository,  );  fetchAttendance() async {    executeBuilder(() => _repository.fetchAttendanceType(),        onSuccess: (value) {          final data = value.map((e) => AttendanceNotifiType.fromDto(e)).toList();          emit(Initialized<List<AttendanceNotifiType>>(data: data));        });  }  addAttendance(      {required AddAttendanceNotificationsPrams          addAttendanceNotificationsPrams}) {    executeEmitterListener(() => _repository.addAttendanceNotifications(        addAttendanceNotificationsPrams: addAttendanceNotificationsPrams));  }}