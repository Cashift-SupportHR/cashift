import 'dart:io';import 'package:shiftapp/presentation/shared/components/buttons/row_buttons.dart';import '../../../../../../../presentationUser/attendance/facerecognation/index.dart';import '../../../../../../../presentationUser/resources/colors.dart';import '../../../../../../../presentationUser/salarydefinitionrequest/requests/widgets/warning_widget.dart';import '../../../../../../../presentationUser/workHazards/presentation/addWorkHazard/widgets/upload_files_list.dart';import '../../../../../../../shared/components/base_stateless_widget.dart';import '../../../../../../../shared/components/text_field/build_text_field_item.dart';import '../../../widgets/vehicles_item.dart';class AddMaintenanceScreen extends BaseStatelessWidget {  TextEditingController damageController = TextEditingController();  TextEditingController vehicleSpecificationsController =      TextEditingController();  List<File> files = [];  @override  Widget build(BuildContext context) {    return Scaffold(      bottomNavigationBar: RowButtons(        onSave: () {},        onCancel: () {          Navigator.pop(context);        },      ),      body: SingleChildScrollView(        padding: const EdgeInsets.all(15),        child: Column(          children: [            BuildTextFieldItem(              title: strings.damage,              hintText: strings.write_damage,              keyboardType: TextInputType.text,              controller: damageController,            ),            BuildTextFieldItem(              title: strings.vehicle_specifications,              keyboardType: TextInputType.text,              hintText: strings.write_vehicle_specifications,              controller: vehicleSpecificationsController,              minLines: 5,            ),            UploadFilesList(              initialValueList: [],              onPicker: (filesValue) {                files = filesValue;              },            ),            WarningWidget(              warningText: strings.add_complaint_files_desc,              margin: const EdgeInsetsDirectional.only(                  end: 10, top: 16, bottom: 16),              color: kPrimary,            ),          ],        ),      ),    );  }}