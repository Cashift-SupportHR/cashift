import 'package:shiftapp/core/services/routes.dart';import 'package:shiftapp/presentation/presentationUser/appliedoffers/details/widgets/decoration_container.dart';import 'package:shiftapp/presentation/presentationUser/appliedoffers/details/widgets/tasksAndDuties.dart';import 'package:shiftapp/presentation/presentationUser/resources/colors.dart';import 'package:shiftapp/presentation/shared/components/index.dart';import '../../../../../../../domain/entities/shared/date_formatter.dart';import '../../../../../../presentationUser/resources/constants.dart';import '../../../../domain/entities/index.dart';class VehiclesDetailsScreen extends BaseStatelessWidget {  final VehicleDetails data;  VehiclesDetailsScreen({super.key, required this.data});  @override  Widget build(BuildContext context) {    return Column(      children: [        Expanded(          child: SingleChildScrollView(            padding: const EdgeInsets.all(15),            child: Column(              children: [                headerVehicles(),                infoVehicles(),                infoPlateAndLicense(),                additionalSpecifications(context: context),                covenant(),              ],            ),          ),        ),      ],    );  }  Widget headerVehicles() {    return SizedBox(      height: 78,      child: Row(        mainAxisAlignment: MainAxisAlignment.start,        crossAxisAlignment: CrossAxisAlignment.start,        children: [          kBuildCircleImage(data.vehicleImage ?? "", size: 40),          SizedBox(            width: 10,          ),          Expanded(              child: Column(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Text(                data.vehicleBrandName ?? "",                maxLines: 2,                style: kTextBold.copyWith(                  fontSize: 16,                  overflow: TextOverflow.ellipsis,                ),              ),              Text(                data.model ?? "",                maxLines: 2,                style: kTextRegular.copyWith(                  fontSize: 12,                  color: kPrimaryDark,                  overflow: TextOverflow.ellipsis,                ),              ),            ],          )),        ],      ),    );  }  Widget infoVehicles() {    return Container(      padding: EdgeInsets.all(5),      margin: EdgeInsets.only(top: 10),      decoration: Decorations.decorationTabs,      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          UnderlineText(text: strings.vehicles_info, fontSize: 15),          SizedBox(            height: 10,          ),          ListRowTexts(            valueStyle: kTextMedium.copyWith(fontSize: 12, color: Colors.black),            titles: [              strings.vehicle_type,              strings.company_name,              strings.project_name,              strings.model,              strings.year_crate,            ],            values: [              data.vehicleBrandName ?? "",              data.companyName ?? "",              data.projectName ?? "",              data.model ?? "",              data.yearOfManufacture.toString() ?? "",            ],          ),        ],      ),    );  }  Widget infoPlateAndLicense() {    return Container(      padding: EdgeInsets.all(5),      margin: EdgeInsets.only(top: 10),      decoration: Decorations.decorationTabs,      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          UnderlineText(text: strings.plate_license_info, fontSize: 15),          SizedBox(            height: 10,          ),          ListRowTexts(            valueStyle: kTextMedium.copyWith(fontSize: 12, color: Colors.black),            titles: [              strings.license_number,              strings.number_plate,              strings.expair_date_license,            ],            flex: 2,            values: [              data.licenseNumber ?? "",              data.plateNumber ?? "",              DateFormatter.formatDateString(                  data.licenseExpiryDate.toString() ?? "",                  DateFormatter.TIME_STAMP,                  DateFormatter.DATE_UI)            ],          ),        ],      ),    );  }  Widget additionalSpecifications({context}) {    return Container(      padding: EdgeInsets.all(5),      margin: EdgeInsets.only(top: 10, bottom: 10),      decoration: Decorations.decorationTabs,      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          UnderlineText(text: strings.additional_specifications, fontSize: 15),          SizedBox(            height: 10,          ),          ListRowTexts(              valueStyle:                  kTextMedium.copyWith(fontSize: 12, color: Colors.black),              titles: [                strings.vehicle_specifications,              ],              flex: 2,              values: [                data.specifications ?? "",              ]),          (data.vehicleListOfImages?.length == 0 ||                  data.vehicleListOfImages == null)              ? SizedBox()              : Column(                  mainAxisAlignment: MainAxisAlignment.start,                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    Text(                      strings.vehicle_image,                      style:                          kTextMedium.copyWith(fontSize: 12, color: kGreen_55),                    ),                    SizedBox(                      height: 60,                      width: MediaQuery.of(context).size.width,                      child: ListView.builder(                        scrollDirection: Axis.horizontal,                        itemCount: data.vehicleListOfImages?.length ?? 0,                        itemBuilder: (context, index) => InkWell(                            onTap: () {                              List<String> images = data.vehicleListOfImages!                                  .map((e) => e.imageUrl ?? "")                                  .toList();                              Navigator.pushNamed(                                  context, Routes.filesPreviewPage,                                  arguments: images);                            },                            child: Container(                                margin: EdgeInsets.all(6),                                decoration: Decorations.boxDecorationBorder(                                    borderColor: kPrimary),                                child: kBuildImage(                                    data.vehicleListOfImages?[index].imageUrl ??                                        "",                                    width: 50))),                      ),                    ),                  ],                )        ],      ),    );  }  Widget covenant() {    return (data.custodies?.length == 0 || data.custodies == null)        ? SizedBox()        : IntrinsicHeight(            child: BackgroundContainer(            title: strings.covenant,            child: TasksAndDuties(              tasksAndDuties: data.custodyVehicleNames ?? [],            ),          ));  }}