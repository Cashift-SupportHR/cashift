import 'package:injectable/injectable.dart';import 'package:shiftapp/core/bloc/base_cubit.dart';import '../../../../../presentationUser/common/common_state.dart';import '../../../data/models/change_user_password_params.dart';import '../../../data/repositories/users_management_repository.dart';@Injectable()class ChangeUserPasswordCubit extends BaseCubit {   final UsersManagementRepository _repository;   ChangeUserPasswordCubit(this._repository);   Future<void> changePassword(ChangeUserPasswordParams params) async {     try {       emit(LoadingStateListener());       final message = await _repository.changePassword( params);       emit(SuccessStateListener(data: message));     } catch (e) {       emit(FailureStateListener(e));     }   }}