import 'package:flutter/material.dart';import 'package:shiftapp/generated/assets.dart';import 'package:shiftapp/presentation/shared/components/app_cupertino_button.dart';import '../../../../../../utils/app_icons.dart';import '../../../../../presentationUser/resources/colors.dart';import '../../../../../presentationUser/resources/constants.dart';import '../../../../../shared/components/base_stateless_widget.dart';import '../../../../../shared/components/decorations/decorations.dart';import '../../../../../shared/components/icons/icon_text.dart';import '../../../../../shared/components/text_field/build_text_field_item.dart';import '../../../data/models/add_new_user_params.dart';import '../../../data/models/change_user_password_params.dart';import '../../../domain/entities/user_management.dart';class ChangeUserPasswordScreen extends BaseStatelessWidget {  final UserManagement? userInfo;  final Function(ChangeUserPasswordParams) changePassword;  ChangeUserPasswordScreen({    Key? key,    this.userInfo,    required this.changePassword,  }) : super(key: key);  TextEditingController userPasswordController = TextEditingController();  TextEditingController userConfirmPasswordController = TextEditingController();  final _formKey = GlobalKey<FormState>();  AddNewUserParams addNewUserParams = AddNewUserParams();  @override  Widget build(BuildContext context) {    return SingleChildScrollView(      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 25),      child: Form(          key: _formKey,          child: Column(            children: [              Image.asset(                Assets.imagesChangePassword,              ),              const SizedBox(                height: 30,              ),              InfoUserWidget(userInfo: userInfo!),              const SizedBox(                height: 25,              ),              BuildTextFieldItem(                title: strings.type_new_password,                hintText: strings.type_new_password,                keyboardType: TextInputType.name,                controller: userPasswordController,                isPassword: true,              ),              BuildTextFieldItem(                title: strings.retype_password,                hintText: strings.retype_password,                keyboardType: TextInputType.name,                controller: userConfirmPasswordController,                isPassword: true,              ),              const SizedBox(                height: 10,              ),              AppCupertinoButton(                text: strings.confirm_button,                radius: BorderRadius.circular(6),                onPressed: () {                  changePassword(ChangeUserPasswordParams(                    email: userInfo?.email,                    password: userPasswordController.text,                    confirmPassword: userConfirmPasswordController.text,                  ));                },              ),            ],          )),    );  }}class InfoUserWidget extends StatelessWidget {  final UserManagement userInfo;  const InfoUserWidget({Key? key, required this.userInfo}) : super(key: key);  @override  Widget build(BuildContext context) {    return Container(      padding: const EdgeInsets.all(16),      decoration: Decorations.shapeDecoration(),      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          Text(            userInfo.name ?? '',            style: kTextSemiBold.copyWith(fontSize: 24, color: kPrimary),          ),          const SizedBox(            height: 10,          ),          iconText(            icon: AppIcons.phone,            text: userInfo.phoneNumber ?? '',          ),          SizedBox(            height: 4,          ),          iconText(            icon: AppIcons.email,            text: userInfo.email ?? '',          ),      ],      ),    );  }  Widget iconText({required String icon, required String text}) => IconText(    icon: icon,    text: text,    crossAxisAlignment: CrossAxisAlignment.center,    sizedBoxWidth: 14,    isExpanded: true,    iconSize: 16,    textStyle: kTextRegular.copyWith(fontSize: 16, color: kGreen_7B),  );}