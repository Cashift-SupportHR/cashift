// ignore: unused_importimport 'package:flutter/material.dart';import 'package:shiftapp/extensions/extensions.dart';import 'package:shiftapp/presentation/presentationUser/resources/colors.dart'; import '../../../../../presentationUser/resources/validation.dart';import '../../../../../shared/components/app_cupertino_button.dart';import '../../../../../shared/components/base_stateless_widget.dart';import '../../../../../shared/components/text_field/build_text_field_item.dart';import '../../../../projectsManagement/presentation/addNewProject/pages/addProject/widgets/company_picker.dart';import '../../../../usersManagement/domain/entities/company.dart';import '../../../data/models/add_edit_classification_prams.dart';import '../../../domain/entities/classification.dart';class AddClassificationScreen extends BaseStatelessWidget {  final Function(AddEditClassificationPrams addEditClassificationPrams) onAddEdit;  Classification? classification;  final List<Company> company;  final _formKey = GlobalKey<FormState>();  var nameArController = TextEditingController();  var nameEnController = TextEditingController();  var descriptionController = TextEditingController();  int? companyId;  AddClassificationScreen({required this.onAddEdit, required this.company, this.classification});  @override  Widget build(BuildContext context) {    nameArController = TextEditingController(text: classification?.nameAr == null ? "" : classification?.nameAr ?? '');    nameEnController = TextEditingController(text: classification?.nameEn == null ? "" : classification?.nameEn ?? '');    descriptionController = TextEditingController(text: classification?.description == null ? "" : classification?.description ?? '');    int id = classification?.id == null ? 0 : classification?.id ?? 0;    companyId = classification?.companyId ?? 0;    return Padding(      padding: const EdgeInsets.all(20),      child: Form(        key: _formKey,        child: Scaffold(          backgroundColor: kBackground,          bottomNavigationBar: Padding(            padding: const EdgeInsets.only(bottom: 10),            child: AppCupertinoButton(              text: classification != null ? strings.edit : strings.add,              radius: BorderRadius.circular(8),              onPressed: () async {                print(nameArController.text);                print(descriptionController.text);                print(nameEnController.text);                print(id);                print("jjkj");                if (_formKey.currentState!.validate()) {                  onAddEdit(AddEditClassificationPrams(                    id: id,                    description: descriptionController.text,                    nameAr: nameArController.text,                    nameEn: nameEnController.text,                    companyId: companyId,                  ));                }              },            ),          ),          body: SingleChildScrollView(            child: Column(              children: [                BuildTextFieldItem(                  title: strings.name_ar,                  controller: nameArController,                  keyboardType: TextInputType.text,                  hintText: strings.name_ar,                  validator: (value) => validateArabicText(value ?? ''),                  minLines: 1,                ),                BuildTextFieldItem(                  title: strings.name_en,                  keyboardType: TextInputType.text,                  controller: nameEnController,                  hintText: strings.name_en,                  validator: (value) => validateEnglishText(value ?? ''),                  minLines: 1,                ),                BuildTextFieldItem(                  title: strings.description,                  keyboardType: TextInputType.text,                  controller: descriptionController,                  hintText: strings.description,                  minLines: 3,                ),                CompanyProjectPicker(                  label: strings.company_name,                  hintText: strings.select_company_name,                  initialValue: classification?.companyName ?? '',                  items: company,                  onSelectItem: (item) {                    companyId = item.index;                    print(item.index);                  },                ),              ],            ),          ),        ),      ),    );  }  validateArabicText(String value) {    if (value.isNullOrEmpty()) {      return strings.this_field_is_required;    } else if (!Validation.isArabicLettersWithNumbers(value)) {      return strings.must_be_arabic_letters;    }    return null;  }  validateEnglishText(String value) {    if (value.isNullOrEmpty()) {      return strings.this_field_is_required;    } else if (!Validation.isEnglishLettersWithNumbers(value)) {      return strings.must_be_english_letters;    }    return null;  }}