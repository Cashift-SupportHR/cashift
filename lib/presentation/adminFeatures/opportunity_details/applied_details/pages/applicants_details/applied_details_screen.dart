import 'package:flutter/material.dart';import 'package:shiftapp/presentation/presentationUser/resources/colors.dart';import 'package:shiftapp/presentation/presentationUser/resources/constants.dart';import 'package:shiftapp/presentation/shared/components/underline_widget.dart';import '../../../../../../utils/app_icons.dart';import '../../../../../../utils/app_images.dart';import '../../../../../presentationUser/appliedoffers/details/widgets/decoration_container.dart';import '../../../../../shared/components/decorations/decorations.dart';import '../../../../../shared/components/texts/list_row_texts_icons.dart';import '../../../../../shared/components/texts/list_row_texts_icons_v2.dart';import '../../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/domain/entities/opportunities/ApplicantsDetails.dart';class AppliedDetailsScreen extends BaseStatelessWidget {  final ApplicantsDetails data;  AppliedDetailsScreen({required this.data});  @override  Widget build(BuildContext context) {    return Column(      children: [        Container(          decoration: Decorations.decorationContainer,          padding: EdgeInsets.all(10),          margin: EdgeInsets.all(10),          child: Column(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Padding(                padding: const EdgeInsets.all(8.0),                child: Text(                  strings.applied_details,                  style: kTextMedium.copyWith(fontSize: 16, color: kPrimaryDark),                ),              ),              UnderlineWidget(),              SizedBox(                height: 15,              ),              ListRowTextsIconsV2(                iconSize: 18,                // iconColor: kPrimary,                flex: 3,                padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 14),                crossAxisAlignment: CrossAxisAlignment.start,                items: getListData(context),              ),            ],          ),        ),        SizedBox(          height: 15,        ),        _DeductionsInfo(appliedOffer: data),      ],    );  }  List<ListRowTextItem> getListData(BuildContext context) {    return [      ListRowTextItem(        icon: AppIcons.a5,        title: strings.applied_name,        value: data.employeeName == null || data.employeeName == '' ? '-' : data.employeeName ?? '_',      ),      ListRowTextItem(        icon: AppIcons.a6,        title: strings.phone,        value: data.phoneNumber == null || data.phoneNumber == '' ? '-' : data.phoneNumber ?? '_',      ),      ListRowTextItem(        icon: AppIcons.a1,        title: strings.qualification,        value: data.qualification == null || data.qualification == '' ? '-' : data.qualification ?? '_',      ),      ListRowTextItem(        icon: AppIcons.city2,        title: strings.city,        value: data.cityName == null || data.cityName == '' ? '-' : data.cityName ?? '_',      ),      ListRowTextItem(        icon: AppIcons.nameProject,        title: strings.id_number,        value: data.idNumber == null || data.idNumber == '' ? '-' : data.idNumber ?? '_',      ),      ListRowTextItem(        icon: AppIcons.a3,        title: strings.status,        value: data.statusName == null || data.statusName == '' ? '-' : data.statusName ?? '_',      ),    ];  }}class _DeductionsInfo extends BaseStatelessWidget {  final ApplicantsDetails appliedOffer;  _DeductionsInfo({Key? key, required this.appliedOffer}) : super(key: key);  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),      child: BackgroundContainer(        title: strings.deductions,        padding: EdgeInsets.all(10),        child: ((appliedOffer.amountViolation == 0 || appliedOffer.amountViolation == null) &&                (appliedOffer.totalDeductMoneyCasihftLoanByFreelanceDetails == 0 || appliedOffer.totalDeductMoneyCasihftLoanByFreelanceDetails == null) &&                (appliedOffer.totalDeductMoneyClearanceCertificate == 0 || appliedOffer.totalDeductMoneyClearanceCertificate == null))            ? Center(                child: Column(                  mainAxisAlignment: MainAxisAlignment.center,                  crossAxisAlignment: CrossAxisAlignment.center,                  children: [                    Image.asset(                      AppImages.st,                      width: 100,                      height: 100,                    ),                    SizedBox(                      height: 10,                    ),                    Text(                      strings.no_deductions,                      style: kTextMedium,                    ),                    SizedBox(                      height: 10,                    ),                  ],                ),              )            : Column(                children: [                  ListRowTextsIcons(                    titleStyle: kTextMedium.copyWith(fontSize: 13, color: kPrimary),                    padding: EdgeInsetsDirectional.only(start: 8, top: 8, bottom: 6, end: 5),                    valueStyle: kTextMedium.copyWith(fontSize: 12, color: kGray_AC),                    isExpanded: true,                    flex: -1,                    icons: [                      AppIcons.d1,                      AppIcons.d2,                      AppIcons.d3,                    ],                    titles: [                      strings.infringement,                      strings.deducting_certificate,                      strings.loan,                    ],                    values: [                      "${appliedOffer.amountViolation} ",                      "${appliedOffer.totalDeductMoneyClearanceCertificate} ",                      "${appliedOffer.totalDeductMoneyCasihftLoanByFreelanceDetails} ",                    ],                  ),                  appliedOffer.totalDeductions == 0 || appliedOffer.totalDeductions == null                      ? SizedBox()                      : Container(                          color: kGreen_C4.withOpacity(.2),                          padding: EdgeInsets.all(10),                          child: ListRowTextsIcons(                            titleStyle: kTextMedium.copyWith(fontSize: 13, color: kPrimary),                            padding: EdgeInsetsDirectional.only(start: 8, top: 8, bottom: 6, end: 5),                            valueStyle: kTextMedium.copyWith(fontSize: 12, color: kOrange00),                            isExpanded: true,                            flex: -1,                            icons: [                              AppIcons.d4,                            ],                            titles: [                              strings.total_deductions,                            ],                            values: [                              "${appliedOffer.totalDeductions}${strings.rs}",                            ],                          ),                        ),                ],              ),      ),    );  }}