import 'package:flutter/material.dart';import 'package:shiftapp/presentation/adminFeatures/gasStations/presentation/pages/view/screen/gas_stations_screen.dart';import '../../../../../../../core/services/routes.dart';import '../../../../../../presentationUser/advancedFilter/widgets/text_field_search_job.dart';import '../../../../../../presentationUser/common/common_state.dart';import '../../../../../../presentationUser/salarydefinitionrequest/requests/widgets/title_and_add_new_request.dart';import '../../../../../../presentationUser/vehiclesOperation/presentation/currentTourMap/gasStationsPlan/page/gas_stations_plane_page.dart';import '../../../../../../shared/components/base/stream_state_widget_v2.dart';import '../../../../../../shared/components/base_widget_bloc.dart';import '../../../../../../shared/components/helper_widgets.dart';import '../../../../domain/entities/GasStation.dart';import '../bloc/gas_stations_bloc.dart';class GasStationsPage    extends BaseBlocWidget<Initialized<List<GasStation>>, GasStationsCubit> {  @override  String? title(BuildContext context) {    return strings.gas_stations;  }  @override  loadInitialData(BuildContext context) {    bloc.fetchInitialData();    controller.clear();  }  TextEditingController controller = TextEditingController();  @override  Widget build(BuildContext context) {    return mainFrame(      body: Column(        children: [          TitleAndAddNewRequest(            title: strings.gas_stations,            textButton: strings.add_gas_stations,            onTap: () async {              final isRefresh =                  await Navigator.pushNamed(context, Routes.addGasStationsPage);              print('isRefresh $isRefresh');              if (isRefresh == true) {                loadInitialData(context);              }            },          ),          Padding(            padding: const EdgeInsets.all(8.0),            child: TextFieldSearchJob(              title: strings.search,              controller: controller,              readOnly: false,              onTap: () {},              onChanged: (value) {                bloc.searchByText(value);              },            ),          ),          Expanded(            child: buildConsumer(context),          ),        ],      ),    );  }  @override  Widget buildWidget(      BuildContext context, Initialized<List<GasStation>> state) {    return StreamStateWidgetV2<List<GasStation>?>(        stream: bloc.gasStationStream,        initialData: state.data,        builder: (context, snapshot) {          return GasStationsScreen(            onRefresh: () => loadInitialData(context),            onDelete: (id) {              bloc.deleteGasStation(                id: id,              );            },            data: snapshot ?? [],          );        });  }  @override  void onSuccessDismissed() {    loadInitialData(context);  }  @override  bool detectRequiredTasks() {    return false;  }}