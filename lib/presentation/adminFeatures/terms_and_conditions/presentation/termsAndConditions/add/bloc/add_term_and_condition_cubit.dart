import 'package:injectable/injectable.dart';import 'package:shiftapp/core/bloc/base_cubit.dart';import 'package:shiftapp/presentation/adminFeatures/usersManagement/domain/entities/company.dart';import '../../../../../../presentationUser/common/common_state.dart';import '../../../../../projectsManagement/data/repositories/projects_management_repository.dart';import '../../../../data/models/index.dart';@Injectable()class AddTermAndConditionCubit extends BaseCubit {  final TermandConditionRepository _repository;  final ProjectsManagementRepository projectsManagementRepository;  AddTermAndConditionCubit(this._repository, this.projectsManagementRepository);  fetchCompany() async {    executeBuilder(() => projectsManagementRepository.fetchCompanies(), onSuccess: (companies) {      emit(Initialized<List<Company>>(data: companies));    });  }  addEditTermandCondition(TermsAndConditionsPrams termsAndConditionsPrams) async {    executeEmitterListener(() => _repository.addEditTermandCondition(termsAndConditionsPrams: termsAndConditionsPrams));  }}