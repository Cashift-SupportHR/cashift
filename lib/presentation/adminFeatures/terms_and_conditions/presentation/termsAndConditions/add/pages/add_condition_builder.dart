import 'package:shiftapp/presentation/adminFeatures/usersManagement/domain/entities/company.dart';import 'package:shiftapp/presentation/presentationUser/common/common_state.dart';import 'package:shiftapp/presentation/shared/components/base_widget_bloc.dart';import 'package:shiftapp/presentation/shared/components/stepper/easy_step.dart';import '../../../../data/models/terms_and_conditions_prams.dart';import '../../../../domain/entities/TermandCondition.dart';import '../bloc/add_term_and_condition_cubit.dart';import '../widgets/add_condition_sheet_widget.dart';class AddConditionBuilder extends BaseBlocWidget<Initialized<List<Company>>, AddTermAndConditionCubit> {  final Function() onRefresh;  final TermandCondition? termAndCondition;   AddConditionBuilder({required this.onRefresh, required this.termAndCondition});  @override  bool detectRequiredTasks() {    return false;  }  @override  void loadInitialData(BuildContext context) {    bloc.fetchCompany();  }  TextEditingController controller = TextEditingController();  @override  Widget buildWidget(BuildContext context, Initialized<List<Company>> state) {    return AddConditionSheetWidget(      company: state.data,      termandCondition: termAndCondition,      onAdd: (TermsAndConditionsPrams termsAndConditionsPrams) {        bloc.addEditTermandCondition(termsAndConditionsPrams);      },    );  }  @override  void onSuccessDismissed() {    onRefresh();    Navigator.of(context).pop();  }}