import 'package:flutter/material.dart';import 'package:shiftapp/presentation/adminFeatures/projectsManagement/presentation/addNewProject/pages/workingPeriodsProject/widgets/jobs_picker.dart';import 'package:shiftapp/presentation/adminFeatures/usersManagement/presentation/addNewUser/widgets/company_picker.dart';import '../../../../presentationUser/common/common_state.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/components/error_handler_widget.dart';import '../../../projectsManagement/domain/entities/job.dart';import '../../../usersManagement/domain/entities/company.dart';import '../../data/models/add_job_uniform_params.dart';import '../../domain/entities/Uniform.dart';import '../../domain/entities/job_uniform_type.dart';import '../widgets/job_uniform_list.dart';class AddJobUniformScreen extends BaseStatelessWidget {  final StreamStateInitial<List<Uniform>?> jobUniformTypeStream;  final StreamStateInitial<List<Job>?> jobStream;  final StreamStateInitial<List<Company>?> companyStream;  final Function(int jobId, int companyId) onFetchJobUniform;  final Function() onFetchJob;  final Function(AddJobUniformParams) onAddJobUniform;  final Function(int, int jobId) onRemoveJobUniform;  AddJobUniformScreen({    Key? key,    required this.companyStream,    required this.jobUniformTypeStream,    required this.jobStream,    required this.onFetchJobUniform,    required this.onRemoveJobUniform,    required this.onAddJobUniform,    required this.onFetchJob,  }) : super(key: key);  @override  Widget build(BuildContext context) {    int jobId = 0;    int companyId = 0;    return Padding(      padding: const EdgeInsets.all(16),      child: Column(        children: [          StreamBuilder<List<Company>?>(              stream: companyStream.stream,              builder: (context, snapshot) {                return snapshot.data == null                    ? SizedBox()                    : CompanyPicker(                        items: snapshot.data ?? [],                        onSelectItem: (value) {                          companyId = value.index;                          onFetchJob();                        },                      );              }),          StreamBuilder<List<Job>?>(              stream: jobStream.stream,              builder: (context, snapshot) {                return snapshot.data == null                    ? SizedBox()                    : JobsPicker(                        //title: strings.select_job_choose_job_uniform,                      hintText :   strings.select_job,                        items: snapshot.data ?? [],                        onSelectItem: (value) {                          print(value);                          jobId = value.index;                          onFetchJobUniform(jobId, companyId);                        },                      );              }),          Expanded(            child: StreamBuilder<List<Uniform>?>(                stream: jobUniformTypeStream.stream,                builder: (context, snapshot) {                  return snapshot.hasError                      ? ErrorPlaceHolderWidget(                          exception: snapshot.error,                          color: kBackground,                        )                      : snapshot.data == null                          ? SizedBox()                          : JobUniformList(                              data: snapshot.data ?? [],                              companyId: companyId,                              jobId: jobId,                              onAddJobUniform: (params) {                                params.jobId = jobId;                                onAddJobUniform(params);                              },                              onRemoveJobUniform: (jobUniformId) {                                print('jobId $jobId');                                onRemoveJobUniform(jobUniformId, jobId);                              },                            );                }),          ),        ],      ),    );  }}