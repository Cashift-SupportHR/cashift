import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:shiftapp/presentation/shared/components/base_widget_bloc.dart';import '../../../../presentationUser/common/common_state.dart';import '../../../projectsManagement/domain/entities/job.dart';import '../../../usersManagement/domain/entities/company.dart';import '../bloc/add_job_uniform_bloc.dart';import 'add_job_uniform_screen.dart';class AddJobUniformPage extends BaseBlocWidget<UnInitState, AddJobUniformCubit> {  AddJobUniformPage({Key? key}) : super(key: key);  @override  void loadInitialData(BuildContext context) {    bloc.fetchInitialData();  }  @override  bool detectRequiredTasks() {    return false;  }  @override  String? title(BuildContext context) {    return strings.job_uniform;  }  int jobId = 0;  int companyId = 0;  @override  Widget buildWidget(BuildContext context, UnInitState state) {    return AddJobUniformScreen(      companyStream: bloc.companyStream,      jobStream: bloc.jobStream,      onFetchJob: () => bloc.fetchJobData(),      jobUniformTypeStream: bloc.jobUniformTypeStream,      onFetchJobUniform: (jobId,companyId) {        this.jobId = jobId;        this.companyId = companyId;        bloc.fetchJobUniform(jobId,companyId);      },      onRemoveJobUniform: (id, jobId) {        this.jobId = jobId;        bloc.deleteJobUniform(id);      },      onAddJobUniform: (params) {        print('params ${params.toJson()}');        bloc.addJobUniform(params);      },    );  }  @override  void onSuccessDismissed() {    bloc.fetchJobUniform(jobId,companyId);  }}