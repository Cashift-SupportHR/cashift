import 'package:flutter/material.dart';import 'package:shiftapp/presentation/shared/components/image_builder.dart';import 'package:shiftapp/presentation/shared/components/material_text_field.dart';import 'package:shiftapp/utils/app_icons.dart';import '../../../../presentationUser/common/common_state.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/resources/constants.dart';import '../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/components/bottom_sheet/list_picker_widget.dart';import '../../../../shared/components/dropdown_filed.dart';import '../../../shared/domain/entities/opportunities/ProjectFiterOpportunity.dart';class TextFieldProjectOpportunityPicker extends BaseStatelessWidget {  final List<ProjectFiterOpportunity> projects;  final Function(Item) onSelectCity;  TextFieldProjectOpportunityPicker({    Key? key,    required this.onSelectCity,    required this.projects,  }) : super(key: key);  @override  Widget build(BuildContext context) {    StreamState<bool> isDeleteStream = StreamStateInitial();    TextEditingController _controller = TextEditingController();    return Padding(      padding: const EdgeInsets.symmetric(horizontal: 15, vertical: 10),      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          Text(            strings.project,            style: kTextSemiBold.copyWith(color: kPrimary),          ),          const SizedBox(            height: 10,          ),          MaterialTextField(              onTap: () async {                ListPickerWidget.showPicker(                    context: context,                    setSearch: true,                    title: strings.select_project,                    searchHint: strings.search,                    items: projects.map((e) => Item(index: e.id ?? 0, value: e.name ?? '', description: e.name ?? '')).toList(),                    onSelectItem: (item) {                      onSelectCity(item);                      _controller.text = item.value;                      isDeleteStream.setData(true);                    });              },              controller: _controller,              readOnly: true,              inputDecoration: kRequestTextFieldDecoration.copyWith(                hintText: strings.select_project,                hintStyle: kTextSemiBold.copyWith(fontSize: 16, color: kPrimary),                suffixIcon: StreamBuilder<bool>(                  stream: isDeleteStream.stream,                  builder: (context, snapshot) {                    return InkWell(                      onTap: () {                        _controller.clear();                        onSelectCity(Item(index: 0, value: ''));                        isDeleteStream.setData(false);                      },                      child: Padding(                        padding: EdgeInsets.all(snapshot.data ?? false ? 12 : 16),                        child: kLoadSvgInCirclePath(                          (snapshot.data ?? false) ? AppIcons.removeCircle : AppIcons.arrow,                          color: kPrimary,                        ),                      ),                    );                  },                ),              )),        ],      ),    );  }}