import 'package:json_annotation/json_annotation.dart';part 'opportunity_details_data_dto.g.dart';@JsonSerializable(ignoreUnannotated: false)class OpportunityDetailsDataDto {  @JsonKey(name: 'id')  final int? id;  @JsonKey(name: 'totalCount')  final int? totalCount;  @JsonKey(name: 'companyName')  final String? companyName;  @JsonKey(name: 'companyLogo')  final String? companyLogo;  @JsonKey(name: 'jobName')  final String? jobName;  @JsonKey(name: 'workingHours')  final int? workingHours;  @JsonKey(name: 'startShiftDate')  final String? startShiftDate;  @JsonKey(name: 'endShiftDate')  final String? endShiftDate;  @JsonKey(name: 'requiredCount')  final int? requiredCount;  @JsonKey(name: 'actualNumber')  final int? actualNumber;  @JsonKey(name: 'salaries')  final double? salaries;  @JsonKey(name: 'description')  final String? description;  @JsonKey(name: 'projectName')  final String? projectName;  @JsonKey(name: 'registerAttendance')  final String? registerAttendance;  @JsonKey(name: 'addedDate')  final String? addedDate;  @JsonKey(name: 'timeJob')  final String? timeJob;  @JsonKey(name: 'completeFreeLanceInfoByCompanyAprovelLevelName')  final String? completeFreeLanceInfoByCompanyAprovelLevelName;  @JsonKey(name: 'conditions')  final List<String>? conditions;  @JsonKey(name: 'activeApplicantsCount')  final ActiveApplicantsCountDto? activeApplicantsCount;  @JsonKey(name: 'waitingApprovalApplicantsCount')  final WaitingApprovalApplicantsCountDto? waitingApprovalApplicantsCount;  @JsonKey(name: 'paidOffApplicantsCount')  final PaidOffApplicantsCountDto? paidOffApplicantsCount;  @JsonKey(name: 'cancelledApplicantsCount')  final CancelledApplicantsCountDto? cancelledApplicantsCount;  OpportunityDetailsDataDto(      {this.id,      this.companyName,      this.companyLogo,      this.totalCount,      this.completeFreeLanceInfoByCompanyAprovelLevelName,      this.jobName,      this.workingHours,      this.startShiftDate,      this.endShiftDate,      this.requiredCount,      this.actualNumber,      this.salaries,      this.description,      this.projectName,      this.registerAttendance,      this.addedDate,      this.timeJob,      this.conditions,      this.activeApplicantsCount,      this.waitingApprovalApplicantsCount,      this.paidOffApplicantsCount,      this.cancelledApplicantsCount});  factory OpportunityDetailsDataDto.fromJson(Map<String, dynamic> json) => _$OpportunityDetailsDataDtoFromJson(json);  Map<String, dynamic> toJson() => _$OpportunityDetailsDataDtoToJson(this);}@JsonSerializable(ignoreUnannotated: false)class ActiveApplicantsCountDto {  @JsonKey(name: 'count')  final int? count;  @JsonKey(name: 'percentage')  final double? percentage;  @JsonKey(name: 'title')  final String? title;  @JsonKey(name: 'subtitle')  final String? subtitle;  ActiveApplicantsCountDto({this.count,this.subtitle, this.percentage, this.title});  factory ActiveApplicantsCountDto.fromJson(Map<String, dynamic> json) => _$ActiveApplicantsCountDtoFromJson(json);  Map<String, dynamic> toJson() => _$ActiveApplicantsCountDtoToJson(this);}@JsonSerializable(ignoreUnannotated: false)class WaitingApprovalApplicantsCountDto {  @JsonKey(name: 'count')  final int? count;  @JsonKey(name: 'percentage')  final double? percentage;  @JsonKey(name: 'title')  final String? title;  @JsonKey(name: 'subtitle')  final String? subtitle;  WaitingApprovalApplicantsCountDto({this.count,this.subtitle, this.percentage, this.title});  factory WaitingApprovalApplicantsCountDto.fromJson(Map<String, dynamic> json) => _$WaitingApprovalApplicantsCountDtoFromJson(json);  Map<String, dynamic> toJson() => _$WaitingApprovalApplicantsCountDtoToJson(this);}@JsonSerializable(ignoreUnannotated: false)class PaidOffApplicantsCountDto {  @JsonKey(name: 'count')  final int? count;  @JsonKey(name: 'percentage')  final double? percentage;  @JsonKey(name: 'title')  final String? title;  @JsonKey(name: 'subtitle')  final String? subtitle;  PaidOffApplicantsCountDto({this.subtitle,this.count, this.percentage, this.title});  factory PaidOffApplicantsCountDto.fromJson(Map<String, dynamic> json) => _$PaidOffApplicantsCountDtoFromJson(json);  Map<String, dynamic> toJson() => _$PaidOffApplicantsCountDtoToJson(this);}@JsonSerializable(ignoreUnannotated: false)class CancelledApplicantsCountDto {  @JsonKey(name: 'count')  final int? count;  @JsonKey(name: 'percentage')  final double? percentage;  @JsonKey(name: 'title')  final String? title;  @JsonKey(name: 'subtitle')  final String? subtitle;  CancelledApplicantsCountDto({this.count, this.subtitle, this.percentage, this.title});  factory CancelledApplicantsCountDto.fromJson(Map<String, dynamic> json) => _$CancelledApplicantsCountDtoFromJson(json);  Map<String, dynamic> toJson() => _$CancelledApplicantsCountDtoToJson(this);}