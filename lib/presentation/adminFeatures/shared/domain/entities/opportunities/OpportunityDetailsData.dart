import '../../../data/models/opportunity_details_data_dto.dart';class OpportunityDetailsData {  OpportunityDetailsData({    this.id,    this.companyName,    this.totalCount,    this.companyLogo,    this.jobName,    this.workingHours,    this.startShiftDate,    this.completeFreeLanceInfoByCompanyAprovelLevelName,    this.endShiftDate,    this.requiredCount,    this.actualNumber,    this.salaries,    this.description,    this.projectName,    this.registerAttendance,    this.addedDate,    this.timeJob,    this.conditions,    this.activeApplicantsCount,    this.waitingApprovalApplicantsCount,    this.paidOffApplicantsCount,    this.cancelledApplicantsCount,  });  int? id;  String? companyName;  String? companyLogo;  String? jobName;  int? workingHours;  int? totalCount;  String? startShiftDate;  String? endShiftDate;  int? requiredCount;  int? actualNumber;  double? salaries;  String? description;  String? projectName;  String? registerAttendance;  String? addedDate;  String? timeJob;  String? completeFreeLanceInfoByCompanyAprovelLevelName;  List<String>? conditions;  ActiveApplicantsCount? activeApplicantsCount;  WaitingApprovalApplicantsCount? waitingApprovalApplicantsCount;  PaidOffApplicantsCount? paidOffApplicantsCount;  CancelledApplicantsCount? cancelledApplicantsCount;  factory OpportunityDetailsData.fromDto(OpportunityDetailsDataDto dto) {    return OpportunityDetailsData(      id: dto.id,      companyName: dto.companyName,      completeFreeLanceInfoByCompanyAprovelLevelName: dto.completeFreeLanceInfoByCompanyAprovelLevelName,      companyLogo: dto.companyLogo,      jobName: dto.jobName,      totalCount: dto.totalCount,      workingHours: dto.workingHours,      startShiftDate: dto.startShiftDate,      endShiftDate: dto.endShiftDate,      requiredCount: dto.requiredCount,      actualNumber: dto.actualNumber,      salaries: dto.salaries,      description: dto.description,      timeJob: dto.timeJob,      activeApplicantsCount: ActiveApplicantsCount.fromDto(dto.activeApplicantsCount!),      waitingApprovalApplicantsCount: WaitingApprovalApplicantsCount.fromDto(dto.waitingApprovalApplicantsCount!),      paidOffApplicantsCount: PaidOffApplicantsCount.fromDto(dto.paidOffApplicantsCount!),      cancelledApplicantsCount: CancelledApplicantsCount.fromDto(dto.cancelledApplicantsCount!),      conditions: dto.conditions,      addedDate: dto.addedDate,      registerAttendance: dto.registerAttendance,      projectName: dto.projectName,    );  }  //OpportunityDetailsDataDto}class CancelledApplicantsCount {  CancelledApplicantsCount({    this.count,    this.percentage,    this.title,    this.subtitle,  });  int? count;  double? percentage;  String? title;  String? subtitle;  factory CancelledApplicantsCount.fromDto(CancelledApplicantsCountDto dto) {    return CancelledApplicantsCount(      count: dto.count,      percentage: dto.percentage,      title: dto.title,      subtitle: dto.subtitle,    );  }}class PaidOffApplicantsCount {  PaidOffApplicantsCount({    this.count,    this.subtitle,    this.percentage,    this.title,  });  int? count;  double? percentage;  String? title;  String? subtitle;  factory PaidOffApplicantsCount.fromDto(PaidOffApplicantsCountDto dto) {    return PaidOffApplicantsCount(      count: dto.count,      percentage: dto.percentage,      title: dto.title,      subtitle: dto.subtitle,    );  }}class WaitingApprovalApplicantsCount {  WaitingApprovalApplicantsCount({    this.count,    this.percentage,    this.title,    this.subtitle,  });  int? count;  double? percentage;  String? title;  String? subtitle;  factory WaitingApprovalApplicantsCount.fromDto(WaitingApprovalApplicantsCountDto dto) {    return WaitingApprovalApplicantsCount(      count: dto.count,      percentage: dto.percentage,      title: dto.title,      subtitle: dto.subtitle,    );  }}class ActiveApplicantsCount {  ActiveApplicantsCount({    this.count,    this.percentage,    this.title,    this.subtitle,  });  int? count;  double? percentage;  String? title;  String? subtitle;  factory ActiveApplicantsCount.fromDto(ActiveApplicantsCountDto dto) {    return ActiveApplicantsCount(      count: dto.count,      subtitle: dto.subtitle,      percentage: dto.percentage,      title: dto.title,    );  }}