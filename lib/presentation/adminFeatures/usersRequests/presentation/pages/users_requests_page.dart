import 'package:shiftapp/presentation/adminFeatures/usersRequests/presentation/pages/users_requests_screen.dart';import 'package:shiftapp/presentation/shared/components/index.dart';import 'package:shiftapp/presentation/shared/models/common_list_item.dart';import '../../../../../utils/app_icons.dart';import '../../../../presentationUser/common/common_state.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/resources/constants.dart';import '../../../../shared/components/text_field/build_text_field_item.dart';import '../../data/models/reject_user_request_params.dart';import '../../domain/entities/user_request.dart';import '../bloc/users_requests_cubit.dart';class UsersRequestsPage extends BaseBlocWidget<    Initialized<List<CommonListItem>>, UsersRequestsCubit> {  UsersRequestsPage({Key? key}) : super(key: key);  @override  String? title(BuildContext context) {    return strings.mobile_number_change_requests;  }  @override  loadInitialData(BuildContext context) {    bloc.fetchUsersRequestTabs();  }  @override  bool detectRequiredTasks() {    return false;  }  TextEditingController controller = TextEditingController();int statusId = 0;  @override  Widget buildWidget(      BuildContext context, Initialized<List<CommonListItem>> state) {    statusId = state.data.first.id ?? 0;    return DynamicTabBarView(      tabs: CommonListItem.toDynamicItemsList(state.data),      isSeparate: true,      padding: EdgeInsets.symmetric(vertical: 10),      marginTabs: EdgeInsets.symmetric(horizontal: 10),      onTap: (id) {        statusId = id;        bloc.fetchUsersRequests(id);      },      pageWidget: StreamDataStateWidget<List<UserRequest>?>(        stream: bloc.usersRequestStream,        builder: (context, data) {          return UsersRequestsScreen(            data: data ?? [],            onReject: (RejectUserRequestParams params) {              params.statusId = statusId;              bloc.acceptRejectUserRequest(params);            },            onRefresh: () {              loadInitialData(context);            },          );        },      ),    );  }  @override  void onSuccessDismissed() {   bloc.fetchUsersRequests(statusId);  }}