import 'package:flutter/material.dart';import 'package:flutter_svg/svg.dart';import 'package:shiftapp/presentation/adminFeatures/admin_wallet/presentation/widgets/header_item_widget.dart';import '../../../../../utils/app_icons.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/resources/constants.dart';import '../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/components/decorations/decorations.dart';import '../../domain/entities/deposit_admin_wallet.dart';import '../../domain/entities/pending_payed_admin_wallet.dart';class ItemAdminWalletWidget extends BaseStatelessWidget {  final int design;  DepositAdminWallet? depositAdminWallet;  PendingPayedAdminWallet? pendingPayedAdminWallet;  ItemAdminWalletWidget({required this.design, required this.depositAdminWallet, required this.pendingPayedAdminWallet});  @override  Widget build(BuildContext context) {    return IntrinsicHeight(        child: Container(      decoration: Decorations.decorationConditions,      padding: EdgeInsets.all(10),      margin: EdgeInsets.symmetric(horizontal: 16, vertical: 5),      child: Column(        children: [          //  list  data dispose          HeaderItemWidget(            dataHeader: DataHeader(              companyLogo: design == 1 ? depositAdminWallet?.companyLogo ?? '' : pendingPayedAdminWallet?.header?.companyLogo ?? '',              companyName: design == 1 ? depositAdminWallet?.companyName ?? '' : pendingPayedAdminWallet?.header?.projectName ?? '',              job: pendingPayedAdminWallet?.header?.jobName ?? '',              design: design,              dateDispose: depositAdminWallet?.date ?? '',              money: depositAdminWallet?.money ?? '',            ),          ),          design == 2 ? listDataLabel() : SizedBox(),          design == 2              ? Row(                  children: [                    Text(                      pendingPayedAdminWallet?.footer?.key ?? '',                      style: kTextMedium.copyWith(color: kGreen_6c, fontSize: 12),                      textAlign: TextAlign.center,                    ),                    Spacer(),                    valueRow(value: pendingPayedAdminWallet?.footer?.value ?? '')                  ],                )              : SizedBox(),        ],      ),    ));  }  valueRow({required String value}) {    return Row(      children: [        Text(          value,          style: kTextBold.copyWith(color: kPrimary, fontSize: 15),          textAlign: TextAlign.center,        ),        Text(          "${strings.rs} ",          style: kTextMedium.copyWith(color: kPrimary, fontSize: 12),          textAlign: TextAlign.center,        ),        SizedBox(          width: 10,        ),        SvgPicture.asset(AppIcons.exchange),      ],    );  }  listDataLabel() {    return Container(      height: 80,      child: GridView.builder(          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(            crossAxisCount: 2,            childAspectRatio: 2,            crossAxisSpacing: 20.0,            mainAxisSpacing: 4.0,            mainAxisExtent: 20,          ),          itemCount: pendingPayedAdminWallet?.body?.length,          itemBuilder: (BuildContext ctx, index) {            return itemLabelValue(label: pendingPayedAdminWallet?.body?[index].key ?? '', value: pendingPayedAdminWallet?.body?[index].value ?? '');          }),    );  }  itemLabelValue({    required String label,    required String value,  }) {    return Container(      height: 30,      child: Row(        children: [          Expanded(            child: Text(              "${label} : ",              style: kTextBold.copyWith(color: kPrimary, fontSize: 10),            ),          ),          SizedBox(            width: 5,          ),          Text(            value,            style: kTextMedium.copyWith(color: kBattleShipGrey, fontSize: 12),          ),        ],      ),    );  }}