import 'package:flutter/material.dart';import 'package:syncfusion_flutter_datepicker/datepicker.dart';import '../../../../../domain/entities/shared/date_formatter.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/resources/constants.dart';import '../../../../shared/components/app_cupertino_button.dart';import '../../../../shared/components/base_stateless_widget.dart';import '../../../../shared/components/bottom_sheet/list_picker_widget.dart';import '../../../../shared/components/dropdown_filed.dart';import '../../../../shared/components/helper_widgets.dart';import '../../../../shared/components/underline_widget.dart';import '../../data/models/admin_wallet_prams.dart';import '../../domain/entities/filterAndTaps.dart';class filterAdminWallet extends BaseStatelessWidget {  FilterAndTaps tabsAndFilter;  PickerDateRange? dateRange = PickerDateRange(DateTime.now(), DateTime.now());  int type;  filterAdminWallet({    required this.tabsAndFilter,    required this.type,    required this.onChange,    required this.dateFilter,  });  String dateFilter;  Function({required AdminWalletPrams adminWalletPrams}) onChange;  @override  Widget build(BuildContext context) {    String seletFilter = dateFilter;    return Padding(      padding: const EdgeInsets.symmetric(horizontal: 15, vertical: 10),      child: Row(        children: [          Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Text(strings.filter, style: kTextMedium.copyWith(color: kPrimary)),              UnderlineWidget(width: 80),            ],          ),          SizedBox(            width: 30,          ),          Spacer(),          StatefulBuilder(builder: (context, setState) {            return InkWell(              onTap: () {                ListPickerWidget.showPicker(                    context: context,                    setSearch: false,                    title: strings.filter,                    isScrollControlled: false,                    items: tabsAndFilter.filters!.map((e) => Item(index: e.id!, value: e.name ?? '')).toList(),                    onSelectItem: (item) async {                      seletFilter = item.value;                      onChange(                        adminWalletPrams: AdminWalletPrams(                          tabId: type,                          filterId: item.index,                          nameFilter: item.value,                          pageSize: 0,                          pageNumber: 10,                        ),                      );                      setState(() {});                    });              },              child: Row(                children: [                  InkWell(                    child: Icon(Icons.filter_list_alt, color: kPrimary),                    onTap: () {                      showAppModalBottomSheet(                        context: context,                        isScrollControlled: false,                        title: strings.select_working_day_date,                        child: Column(                          children: [                            Expanded(                              child: SfDateRangePicker(                                view: DateRangePickerView.month,                                selectionMode: DateRangePickerSelectionMode.range,                                onSelectionChanged: (DateRangePickerSelectionChangedArgs args) {                                  dateRange = args.value;                                },                              ),                            ),                            Padding(                              padding: const EdgeInsets.only(bottom: 20, right: 10, left: 10),                              child: AppCupertinoButton(                                text: strings.save_button,                                onPressed: () {                                  String startDateLangCode = DateFormatter.formatDateStringNoPattern(dateRange!.startDate.toString());                                  String endDateLangCode = DateFormatter.formatDateStringNoPattern(dateRange!.endDate.toString());                                  String startDate = DateFormatter.formatDateStringNoLangCode(dateRange!.startDate.toString(), pattern: DateFormatter.TIME_STAMP);                                  String endDate = DateFormatter.formatDateStringNoLangCode(dateRange!.endDate.toString(), pattern: DateFormatter.TIME_STAMP);                                  seletFilter = '$startDateLangCode - $endDateLangCode';                                  onChange(                                    adminWalletPrams: AdminWalletPrams(                                      startDate: startDate,                                      dateFilter: seletFilter,                                      endDate: endDate,                                      tabId: type,                                      filterId: 0,                                      pageSize: 0,                                      pageNumber: 10,                                    ),                                  );                                  setState(() {});                                  Navigator.pop(context);                                },                              ),                            )                          ],                        ),                      );                    },                  ),                  Text(seletFilter, style: kTextRegular.copyWith(color: kPrimary)),                  Icon(Icons.keyboard_arrow_down, color: kPrimary),                ],              ),            );          }),        ],      ),    );  }}